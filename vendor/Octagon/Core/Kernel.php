<?php

namespace Octagon\Core;

use Octagon\Http\Request;
use Octagon\Http\Response;
use Octagon\Routing\Router;
use Octagon\Core\ControllerHook;
use Octagon\View\View;
use Octagon\Core\Registry;

/**
 * The Kernel handles the requests and application's response.
 *
 * The Kernel's job is to 1) resolve the controller delegated the task of
 * presenting a response to the request, 2) dispatch the controller once
 * found, and 3) return to the caller the response generated by the controller.
 */

class Kernel
{

    /**
     * Handle the request and return a response.
     *
     * This method resolves the controller delegated the task of presenting
     * a response to the request.
     *
     * @param \Octagon\Http\Request $request Request to handle.
     *
     * @return \Octagon\Routing\Response The response generated by the delegated controller.
     */
    public static function handle(Request $request)
    {
        // Get the request path and method
        $requestPath = $request->getPath();
        $requestMethod = $request->getMethod();

        // Load application routes
        $routeCollection = (require APP_CONFIG_DIRECTORY . DIRECTORY_SEPARATOR . APP_ROUTE_FILE);

        // Get the controller that is mapped to the request path and method
        Router::init($routeCollection);

        $controller = Router::getController($requestPath, $requestMethod);
        // If a controller was not found, report this error
        if ($controller === null) {
            // Push error
            $registry = Registry::getInstance();
            $response = $registry->get404();
            $response->send();

            // TODO: Dump the route table here
            $errmsg = 'Octagon: The request "'.$requestMethod.' '.$requestPath.'" does not match any route defined in the route-config file (route.php)';
            trigger_error($errmsg, E_USER_ERROR);
        }

        // Dispatch the found controller
        $response = Kernel::dispatch($controller);

        // Return response
        return $response;
    }

    /**
     * Dispatch the controller hook.
     *
     * @param \Octagon\Core\ControllerHook $controller
     *
     * @return \Octagon\Routing\Response
     */
    public static function dispatch(ControllerHook $controller)
    {
        // Run controller
        $response = $controller->run();

        // Return response
        return $response;
    }

    /**
     * Force shutdown.
     *
     * @return void
     */
    public static function abort()
    {
        die();
    }

    /**
     * Shutdown the kernel.
     *
     * @return void
     */
    public static function shutdown()
    {
        self::abort();
    }

}
